import timeit






def calculateTempC(thermistorVolt, r2, sourceVoltage):
    thermistorCurent = (sourceVoltage - thermistorVolt) / r2
    #print("Thermistor current = ", thermistorCurent)
    thermistorR = thermistorVolt / thermistorCurent
    #print("Thermistor resistance = ", thermistorR)
    
    print(thermistorR)
    findThermistorValue(thermistorR)




tempList = [[94980, 0],[90410, 1],[86090, 2],[81990, 3],[78110, 4],[74440, 5],[70960, 6],[67660, 7],[64530, 8],[61560, 9],[58750, 10],[56070, 11],[53540, 12],[51130, 13],[48840, 14],[46670, 15],[44600, 16],[42640, 17],[40770, 18],[38990, 19],[37300, 20],[35700, 21],[34170, 22],[32710, 23],[31320, 24],[30000, 25],[28740, 26],[27540, 27],[26400, 28],[25310, 29],[24270, 30],[23280, 31],[22330, 32],[21430, 33],[20570, 34],[19740, 35],[18960, 36],[18210, 37],[17490, 38],[16800, 39],[16150, 40],[15520, 41],[14920, 42],[14350, 43],[13800, 44],[13280, 45],[12770, 46],[12290, 47],[11830, 48],[11390, 49],[10970, 50],[10570, 51],[10180, 52],[9807, 53],[9450, 54],[9109, 55],[8781, 56],[8467, 57],[8166, 58],[7876, 59],[7599, 60],[7332, 61],[7076, 62],[6830, 63],[6594, 64],[6367, 65],[6149, 66],[5940, 67],[5738, 68],[5545, 69],[5359, 70],[5180, 71],[5007, 72],[4842, 73],[4682, 74],[4529, 75],[4381, 76],[4239, 77],[4102, 78],[3970, 79],[3843, 80],[3720, 81],[3602, 82],[3489, 83],[3379, 84],[3273, 85],[3172, 86],[3073, 87],[2979, 88],[2887, 89],[2799, 90],[2714, 91],[2632, 92],[2552, 93],[2476, 94],[2402, 95],[2331, 96],[2262, 97],[2195, 98],[2131, 99],[2069, 100],[2009, 101],[1950, 102],[1894, 103],[1840, 104],[1788, 105],[1737, 106],[1688, 107],[1640, 108],[1594, 109],[1550, 110],[1507, 111],[1465, 112],[1425, 113],[1386, 114],[1348, 115],[1311, 116],[1276, 117],[1241, 118],[1208, 119],[1176, 120],[1145, 121],[1114, 122],[1085, 123],[1057, 124],[1029, 125],[1002, 126],[976.3, 127],[951.1, 128],[926.7, 129],[903, 130],[880, 131],[857.7, 132],[836.1, 133],[815, 134],[794.6, 135],[774.8, 136],[755.6, 137],[736.9, 138],[718.8, 139],[701.2, 140],[684.1, 141],[667.5, 142],[651.3, 143],[635.6, 144],[620.3, 145],[605.5, 146],[591.1, 147],[577.1, 148],[563.5, 149],[550.2, 150]]

tempList = [[ 88466 , 857750 , -40 ], [ 857750 , 805850 , -39 ], [ 805850 , 757350 , -38 ], [ 757350 , 712050 , -37 ], [ 712050 , 669750 , -36 ], [ 669750 , 630150 , -35 ], [ 630150 , 593100 , -34 ], [ 593100 , 558450 , -33 ], [ 558450 , 526050 , -32 ], [ 526050 , 495700 , -31 ], [ 495700 , 467250 , -30 ], [ 467250 , 440600 , -29 ], [ 440600 , 415600 , -28 ], [ 415600 , 392200 , -27 ], [ 392200 , 370250 , -26 ], [ 370250 , 349600 , -25 ], [ 349600 , 330250 , -24 ], [ 330250 , 312100 , -23 ], [ 312100 , 295000 , -22 ], [ 295000 , 278950 , -21 ], [ 278950 , 263850 , -20 ], [ 263850 , 249650 , -19 ], [ 249650 , 236300 , -18 ], [ 236300 , 223700 , -17 ], [ 223700 , 211900 , -16 ], [ 211900 , 200800 , -15 ], [ 200800 , 190300 , -14 ], [ 190300 , 180400 , -13 ], [ 180400 , 171100 , -12 ], [ 171100 , 162300 , -11 ], [ 162300 , 154000 , -10 ], [ 154000 , 146200 , -9 ], [ 146200 , 138800 , -8 ], [ 138800 , 131850 , -7 ], [ 131850 , 125300 , -6 ], [ 125300 , 119050 , -5 ], [ 119050 , 113150 , -4 ], [ 113150 , 107600 , -3 ], [ 107600 , 102350 , -2 ], [ 102350 , 97390 , -1 ], [ 97390 , 92695 , 0 ], [ 92695 , 88250 , 1 ], [ 88250 , 84040 , 2 ], [ 84040 , 80050 , 3 ], [ 80050 , 76275 , 4 ], [ 76275 , 72700 , 5 ], [ 72700 , 69310 , 6 ], [ 69310 , 66095 , 7 ], [ 66095 , 63045 , 8 ], [ 63045 , 60155 , 9 ], [ 60155 , 57410 , 10 ], [ 57410 , 54805 , 11 ], [ 54805 , 52335 , 12 ], [ 52335 , 49985 , 13 ], [ 49985 , 47755 , 14 ], [ 47755 , 45635 , 15 ], [ 45635 , 43620 , 16 ], [ 43620 , 41705 , 17 ], [ 41705 , 39880 , 18 ], [ 39880 , 38145 , 19 ], [ 38145 , 36500 , 20 ], [ 36500 , 34935 , 21 ], [ 34935 , 33440 , 22 ], [ 33440 , 32015 , 23 ], [ 32015 , 30660 , 24 ], [ 30660 , 29370 , 25 ], [ 29370 , 28140 , 26 ], [ 28140 , 26970 , 27 ], [ 26970 , 25855 , 28 ], [ 25855 , 24790 , 29 ], [ 24790 , 23775 , 30 ], [ 23775 , 22805 , 31 ], [ 22805 , 21880 , 32 ], [ 21880 , 21000 , 33 ], [ 21000 , 20155 , 34 ], [ 20155 , 19350 , 35 ], [ 19350 , 18585 , 36 ], [ 18585 , 17850 , 37 ], [ 17850 , 17145 , 38 ], [ 17145 , 16475 , 39 ], [ 16475 , 15835 , 40 ], [ 15835 , 15220 , 41 ], [ 15220 , 14635 , 42 ], [ 14635 , 14075 , 43 ], [ 14075 , 13540 , 44 ], [ 13540 , 13025 , 45 ], [ 13025 , 12530 , 46 ], [ 12530 , 12060 , 47 ], [ 12060 , 11610 , 48 ], [ 11610 , 11180 , 49 ], [ 11180 , 10770 , 50 ], [ 10770 , 10375 , 51 ], [ 10375 , 9993.5 , 52 ], [ 9993.5 , 9628.5 , 53 ], [ 9628.5 , 9279.5 , 54 ], [ 9279.5 , 8945 , 55 ], [ 8945 , 8624 , 56 ], [ 8624 , 8316.5 , 57 ], [ 8316.5 , 8021 , 58 ], [ 8021 , 7737.5 , 59 ], [ 7737.5 , 7465.5 , 60 ], [ 7465.5 , 7204 , 61 ], [ 7204 , 6953 , 62 ], [ 6953 , 6712 , 63 ], [ 6712 , 6480.5 , 64 ], [ 6480.5 , 6258 , 65 ], [ 6258 , 6044.5 , 66 ], [ 6044.5 , 5839 , 67 ], [ 5839 , 5641.5 , 68 ], [ 5641.5 , 5452 , 69 ], [ 5452 , 5269.5 , 70 ], [ 5269.5 , 5093.5 , 71 ], [ 5093.5 , 4924.5 , 72 ], [ 4924.5 , 4762 , 73 ], [ 4762 , 4605.5 , 74 ], [ 4605.5 , 4455 , 75 ], [ 4455 , 4310 , 76 ], [ 4310 , 4170.5 , 77 ], [ 4170.5 , 4036 , 78 ], [ 4036 , 3906.5 , 79 ], [ 3906.5 , 3781.5 , 80 ], [ 3781.5 , 3661 , 81 ], [ 3661 , 3545.5 , 82 ], [ 3545.5 , 3434 , 83 ], [ 3434 , 3326 , 84 ], [ 3326 , 3222.5 , 85 ], [ 3222.5 , 3122.5 , 86 ], [ 3122.5 , 3026 , 87 ], [ 3026 , 2933 , 88 ], [ 2933 , 2843 , 89 ], [ 2843 , 2756.5 , 90 ], [ 2756.5 , 2673 , 91 ], [ 2673 , 2592 , 92 ], [ 2592 , 2514 , 93 ], [ 2514 , 2439 , 94 ], [ 2439 , 2366.5 , 95 ], [ 2366.5 , 2296.5 , 96 ], [ 2296.5 , 2228.5 , 97 ], [ 2228.5 , 2163 , 98 ], [ 2163 , 2100 , 99 ], [ 2100 , 2039 , 100 ], [ 2039 , 1979.5 , 101 ], [ 1979.5 , 1922 , 102 ], [ 1922 , 1867 , 103 ], [ 1867 , 1814 , 104 ], [ 1814 , 1762.5 , 105 ], [ 1762.5 , 1712.5 , 106 ], [ 1712.5 , 1664 , 107 ], [ 1664 , 1617 , 108 ], [ 1617 , 1572 , 109 ], [ 1572 , 1528.5 , 110 ], [ 1528.5 , 1486 , 111 ], [ 1486 , 1445 , 112 ], [ 1445 , 1405.5 , 113 ], [ 1405.5 , 1367 , 114 ], [ 1367 , 1329.5 , 115 ], [ 1329.5 , 1293.5 , 116 ], [ 1293.5 , 1258.5 , 117 ], [ 1258.5 , 1224.5 , 118 ], [ 1224.5 , 1192 , 119 ], [ 1192 , 1160.5 , 120 ], [ 1160.5 , 1129.5 , 121 ], [ 1129.5 , 1099.5 , 122 ], [ 1099.5 , 1071 , 123 ], [ 1071 , 1043 , 124 ], [ 1043 , 1015.5 , 125 ], [ 1015.5 , 989.15 , 126 ], [ 989.15 , 963.7 , 127 ], [ 963.7 , 938.9 , 128 ], [ 938.9 , 914.85 , 129 ], [ 914.85 , 891.5 , 130 ], [ 891.5 , 868.85 , 131 ], [ 868.85 , 846.9 , 132 ], [ 846.9 , 825.55 , 133 ], [ 825.55 , 804.8 , 134 ], [ 804.8 , 784.7 , 135 ], [ 784.7 , 765.2 , 136 ], [ 765.2 , 746.25 , 137 ], [ 746.25 , 727.85 , 138 ], [ 727.85 , 710 , 139 ], [ 710 , 692.65 , 140 ], [ 692.65 , 675.8 , 141 ], [ 675.8 , 659.4 , 142 ], [ 659.4 , 643.45 , 143 ], [ 643.45 , 627.95 , 144 ], [ 627.95 , 612.9 , 145 ], [ 612.9 , 598.3 , 146 ], [ 598.3 , 584.1 , 147 ], [ 584.1 , 570.3 , 148 ], [ 570.3 , 556.85 , 149 ], [ 556.85 , 275.1 , 150 ]]

def findThermistorValue(thermRes):
    upperValue = 95000
    print("Starting search")
    start_time = timeit.default_timer()
    #for value in tempList:
    for index in range(len(tempList)):
        if(index < range):
            value = tempList[index][0]
            lowerValue = tempList[index + 1][0]
            upperBound = (upperValue - value)/2 + value
            lowerBound = (value - lowerValue)/ 2 + lowerValue
            
            print lowerValue, thermRes, upperBound
        
        # res2 = (res1 - value[0])/2 + value[0]
        # res1 = value[0]
        # print(thermRes, res2, value[0])
        # if(thermRes <= res2) and (thermRes >= value[0]):
        #     elapsed = timeit.default_timer() - start_time
        #     print(value[1])
        #     print("Found it in ", elapsed * 1000000, "micro seconds")
        #     break



calculateTempC(4.06, 5510, 5)
